{
  "address": "0x708545799825e9F725AA6c4F9674572503582b8a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "delegations",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "amount",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "lockedUntilTimestamp",
              "type": "uint64"
            }
          ],
          "internalType": "struct L1Read.Delegation[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "delegatorSummary",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "delegated",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "undelegated",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "totalPendingWithdrawal",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "nPendingWithdrawals",
              "type": "uint64"
            }
          ],
          "internalType": "struct L1Read.DelegatorSummary",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1BlockNumber",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "markPx",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "oraclePx",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "perp",
          "type": "uint32"
        }
      ],
      "name": "perpAssetInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "coin",
              "type": "string"
            },
            {
              "internalType": "uint32",
              "name": "marginTableId",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "szDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "maxLeverage",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "onlyIsolated",
              "type": "bool"
            }
          ],
          "internalType": "struct L1Read.PerpAssetInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "perp",
          "type": "uint16"
        }
      ],
      "name": "position",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int64",
              "name": "szi",
              "type": "int64"
            },
            {
              "internalType": "uint64",
              "name": "entryNtl",
              "type": "uint64"
            },
            {
              "internalType": "int64",
              "name": "isolatedRawUsd",
              "type": "int64"
            },
            {
              "internalType": "uint32",
              "name": "leverage",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "isIsolated",
              "type": "bool"
            }
          ],
          "internalType": "struct L1Read.Position",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "token",
          "type": "uint64"
        }
      ],
      "name": "spotBalance",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "total",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "hold",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "entryNtl",
              "type": "uint64"
            }
          ],
          "internalType": "struct L1Read.SpotBalance",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "spot",
          "type": "uint32"
        }
      ],
      "name": "spotInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint64[2]",
              "name": "tokens",
              "type": "uint64[2]"
            }
          ],
          "internalType": "struct L1Read.SpotInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "spotPx",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "token",
          "type": "uint32"
        }
      ],
      "name": "tokenInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint64[]",
              "name": "spots",
              "type": "uint64[]"
            },
            {
              "internalType": "uint64",
              "name": "deployerTradingFeeShare",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "evmContract",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "szDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "weiDecimals",
              "type": "uint8"
            },
            {
              "internalType": "int8",
              "name": "evmExtraWeiDecimals",
              "type": "int8"
            }
          ],
          "internalType": "struct L1Read.TokenInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "userVaultEquity",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "equity",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "lockedUntilTimestamp",
              "type": "uint64"
            }
          ],
          "internalType": "struct L1Read.UserVaultEquity",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "withdrawable",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "withdrawable",
              "type": "uint64"
            }
          ],
          "internalType": "struct L1Read.Withdrawable",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x91cce1739880de4b1b4a1cb6c1575a1c6f336c34237b1939cddc7a522e944295",
  "receipt": {
    "to": null,
    "from": "0x4cacfA4B61105852580BA184b6466FD9952654ce",
    "contractAddress": "0x708545799825e9F725AA6c4F9674572503582b8a",
    "transactionIndex": 0,
    "gasUsed": "1161054",
    "logsBloom": "0x
    "blockHash": "0x5385d9f8b8f5d8b73cbb73b584df19ce8325e44ad9899b99b725d1195fc52c65",
    "transactionHash": "0x91cce1739880de4b1b4a1cb6c1575a1c6f336c34237b1939cddc7a522e944295",
    "logs": [],
    "blockNumber": 3445714,
    "cumulativeGasUsed": "1161054",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3b0d300f42adab88f10362e2b204f847",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"delegations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"amount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lockedUntilTimestamp\",\"type\":\"uint64\"}],\"internalType\":\"struct L1Read.Delegation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"delegatorSummary\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"delegated\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"undelegated\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"totalPendingWithdrawal\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"nPendingWithdrawals\",\"type\":\"uint64\"}],\"internalType\":\"struct L1Read.DelegatorSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1BlockNumber\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"markPx\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"oraclePx\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"perp\",\"type\":\"uint32\"}],\"name\":\"perpAssetInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"coin\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"marginTableId\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"szDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"maxLeverage\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"onlyIsolated\",\"type\":\"bool\"}],\"internalType\":\"struct L1Read.PerpAssetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"perp\",\"type\":\"uint16\"}],\"name\":\"position\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"szi\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"entryNtl\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"isolatedRawUsd\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"leverage\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isIsolated\",\"type\":\"bool\"}],\"internalType\":\"struct L1Read.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"token\",\"type\":\"uint64\"}],\"name\":\"spotBalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"total\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"hold\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"entryNtl\",\"type\":\"uint64\"}],\"internalType\":\"struct L1Read.SpotBalance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"spot\",\"type\":\"uint32\"}],\"name\":\"spotInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint64[2]\",\"name\":\"tokens\",\"type\":\"uint64[2]\"}],\"internalType\":\"struct L1Read.SpotInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"spotPx\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"token\",\"type\":\"uint32\"}],\"name\":\"tokenInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint64[]\",\"name\":\"spots\",\"type\":\"uint64[]\"},{\"internalType\":\"uint64\",\"name\":\"deployerTradingFeeShare\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"evmContract\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"szDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"weiDecimals\",\"type\":\"uint8\"},{\"internalType\":\"int8\",\"name\":\"evmExtraWeiDecimals\",\"type\":\"int8\"}],\"internalType\":\"struct L1Read.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"userVaultEquity\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"equity\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lockedUntilTimestamp\",\"type\":\"uint64\"}],\"internalType\":\"struct L1Read.UserVaultEquity\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdrawable\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"withdrawable\",\"type\":\"uint64\"}],\"internalType\":\"struct L1Read.Withdrawable\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L1Read.sol\":\"L1Read\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/L1Read.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract L1Read {\\n  struct Position {\\n    int64 szi;\\n    uint64 entryNtl;\\n    int64 isolatedRawUsd;\\n    uint32 leverage;\\n    bool isIsolated;\\n  }\\n\\n  struct SpotBalance {\\n    uint64 total;\\n    uint64 hold;\\n    uint64 entryNtl;\\n  }\\n\\n  struct UserVaultEquity {\\n    uint64 equity;\\n    uint64 lockedUntilTimestamp;\\n  }\\n\\n  struct Withdrawable {\\n    uint64 withdrawable;\\n  }\\n\\n  struct Delegation {\\n    address validator;\\n    uint64 amount;\\n    uint64 lockedUntilTimestamp;\\n  }\\n\\n  struct DelegatorSummary {\\n    uint64 delegated;\\n    uint64 undelegated;\\n    uint64 totalPendingWithdrawal;\\n    uint64 nPendingWithdrawals;\\n  }\\n\\n  struct PerpAssetInfo {\\n    string coin;\\n    uint32 marginTableId;\\n    uint8 szDecimals;\\n    uint8 maxLeverage;\\n    bool onlyIsolated;\\n  }\\n\\n  struct SpotInfo {\\n    string name;\\n    uint64[2] tokens;\\n  }\\n\\n  struct TokenInfo {\\n    string name;\\n    uint64[] spots;\\n    uint64 deployerTradingFeeShare;\\n    address deployer;\\n    address evmContract;\\n    uint8 szDecimals;\\n    uint8 weiDecimals;\\n    int8 evmExtraWeiDecimals;\\n  }\\n\\n  address constant POSITION_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000800;\\n  address constant SPOT_BALANCE_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000801;\\n  address constant VAULT_EQUITY_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000802;\\n  address constant WITHDRAWABLE_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000803;\\n  address constant DELEGATIONS_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000804;\\n  address constant DELEGATOR_SUMMARY_PRECOMPILE_ADDRESS =\\n    0x0000000000000000000000000000000000000805;\\n  address constant MARK_PX_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000806;\\n  address constant ORACLE_PX_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000807;\\n  address constant SPOT_PX_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000808;\\n  address constant L1_BLOCK_NUMBER_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000809;\\n  address constant PERP_ASSET_INFO_PRECOMPILE_ADDRESS = 0x000000000000000000000000000000000000080a;\\n  address constant SPOT_INFO_PRECOMPILE_ADDRESS = 0x000000000000000000000000000000000000080b;\\n  address constant TOKEN_INFO_PRECOMPILE_ADDRESS = 0x000000000000000000000000000000000000080C;\\n\\n  function position(address user, uint16 perp) external view returns (Position memory) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = POSITION_PRECOMPILE_ADDRESS.staticcall(abi.encode(user, perp));\\n    require(success, \\\"Position precompile call failed\\\");\\n    return abi.decode(result, (Position));\\n  }\\n\\n  function spotBalance(address user, uint64 token) external view returns (SpotBalance memory) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = SPOT_BALANCE_PRECOMPILE_ADDRESS.staticcall(abi.encode(user, token));\\n    require(success, \\\"SpotBalance precompile call failed\\\");\\n    return abi.decode(result, (SpotBalance));\\n  }\\n\\n  function userVaultEquity(\\n    address user,\\n    address vault\\n  ) external view returns (UserVaultEquity memory) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = VAULT_EQUITY_PRECOMPILE_ADDRESS.staticcall(abi.encode(user, vault));\\n    require(success, \\\"VaultEquity precompile call failed\\\");\\n    return abi.decode(result, (UserVaultEquity));\\n  }\\n\\n  function withdrawable(address user) external view returns (Withdrawable memory) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = WITHDRAWABLE_PRECOMPILE_ADDRESS.staticcall(abi.encode(user));\\n    require(success, \\\"Withdrawable precompile call failed\\\");\\n    return abi.decode(result, (Withdrawable));\\n  }\\n\\n  function delegations(address user) external view returns (Delegation[] memory) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = DELEGATIONS_PRECOMPILE_ADDRESS.staticcall(abi.encode(user));\\n    require(success, \\\"Delegations precompile call failed\\\");\\n    return abi.decode(result, (Delegation[]));\\n  }\\n\\n  function delegatorSummary(address user) external view returns (DelegatorSummary memory) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = DELEGATOR_SUMMARY_PRECOMPILE_ADDRESS.staticcall(abi.encode(user));\\n    require(success, \\\"DelegatorySummary precompile call failed\\\");\\n    return abi.decode(result, (DelegatorSummary));\\n  }\\n\\n  function markPx(uint32 index) external view returns (uint64) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = MARK_PX_PRECOMPILE_ADDRESS.staticcall(abi.encode(index));\\n    require(success, \\\"MarkPx precompile call failed\\\");\\n    return abi.decode(result, (uint64));\\n  }\\n\\n  function oraclePx(uint32 index) external view returns (uint64) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = ORACLE_PX_PRECOMPILE_ADDRESS.staticcall(abi.encode(index));\\n    require(success, \\\"OraclePx precompile call failed\\\");\\n    return abi.decode(result, (uint64));\\n  }\\n\\n  function spotPx(uint32 index) external view returns (uint64) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = SPOT_PX_PRECOMPILE_ADDRESS.staticcall(abi.encode(index));\\n    require(success, \\\"SpotPx precompile call failed\\\");\\n    return abi.decode(result, (uint64));\\n  }\\n\\n  function l1BlockNumber() external view returns (uint64) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = L1_BLOCK_NUMBER_PRECOMPILE_ADDRESS.staticcall(abi.encode());\\n    require(success, \\\"L1BlockNumber precompile call failed\\\");\\n    return abi.decode(result, (uint64));\\n  }\\n\\n  function perpAssetInfo(uint32 perp) external view returns (PerpAssetInfo memory) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = PERP_ASSET_INFO_PRECOMPILE_ADDRESS.staticcall(abi.encode(perp));\\n    require(success, \\\"PerpAssetInfo precompile call failed\\\");\\n    return abi.decode(result, (PerpAssetInfo));\\n  }\\n\\n  function spotInfo(uint32 spot) external view returns (SpotInfo memory) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = SPOT_INFO_PRECOMPILE_ADDRESS.staticcall(abi.encode(spot));\\n    require(success, \\\"SpotInfo precompile call failed\\\");\\n    return abi.decode(result, (SpotInfo));\\n  }\\n\\n  function tokenInfo(uint32 token) external view returns (TokenInfo memory) {\\n    bool success;\\n    bytes memory result;\\n    (success, result) = TOKEN_INFO_PRECOMPILE_ADDRESS.staticcall(abi.encode(token));\\n    require(success, \\\"TokenInfo precompile call failed\\\");\\n    return abi.decode(result, (TokenInfo));\\n  }\\n}\\n\",\"keccak256\":\"0x8d13194bcacf7cd29614ff96fb80c5ee76004eecf54d68e870f0cfca19c0f5b7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080806040523461001657611403908161001c8239f35b600080fdfe60806040908082526004908136101561001757600080fd5b600090813560e01c908163298c9005146110d75750806337f980a514610f9a5780634162cd3214610ded57806368fb110914610b3857806389cf7c89146109bf5780639070275914610908578063a69610d1146107d2578063b6dff0b514610615578063bffe348614610436578063c0f0f5ef1461037f578063c8eec8c6146102bc578063ce513b6f146101d45763ee1b5af1146100b457600080fd5b3461017f578260031936011261017f576100cc611187565b6024356001600160a01b038181169392918490036101d057829182918751956100f48761126d565b83875283602080980152885191878301931683528882015287815261011881611252565b51906108025afa926101286112df565b93156101825750838380518101031261017f57508251916101488361126d565b816101628561015883850161130f565b938487520161130f565b93019283528351926001600160401b038092168452511690820152f35b80fd5b845162461bcd60e51b8152908101839052602260248201527f5661756c7445717569747920707265636f6d70696c652063616c6c206661696c604482015261195960f21b6064820152608490fd5b8280fd5b5091346101d0576020928360031936011261017f5780806101f3611187565b8185516101ff81611288565b5284516001600160a01b03909116878201908152878252906102208161126d565b51906108035afa926102306112df565b931561026d5750838380518101031261017f575080610263846001600160401b0393519461025d86611288565b0161130f565b8093525191168152f35b825162461bcd60e51b8152908101859052602360248201527f576974686472617761626c6520707265636f6d70696c652063616c6c206661696044820152621b195960ea1b6064820152608490fd5b509190346101d0576020928360031936011261017f57813563ffffffff811680910361037b5781809185518781019182528781526102f98161126d565b51906108065afa916103096112df565b92156103385750838280518101031261017f5750610330836001600160401b03920161130f565b915191168152f35b835162461bcd60e51b8152908101859052601d60248201527f4d61726b507820707265636f6d70696c652063616c6c206661696c65640000006044820152606490fd5b5080fd5b509190346101d0576020928360031936011261017f57813563ffffffff811680910361037b5781809185518781019182528781526103bc8161126d565b51906108075afa916103cc6112df565b92156103f35750838280518101031261017f5750610330836001600160401b03920161130f565b835162461bcd60e51b8152908101859052601f60248201527f4f7261636c65507820707265636f6d70696c652063616c6c206661696c6564006044820152606490fd5b50823461037b576020806003193601126101d057610452611187565b92808084518481019060018060a01b0380981682528581526104738161126d565b51906108045afa946104836112df565b95156105c7575084518501928284019083878603126101d057838701516001600160401b03978882116105c357019682603f890112156105bf5784880151926104cb84611394565b966104d8845198896112a3565b84885286880190819a8560608098028201019384116105bb579480949a96959b9998979b01915b83831061055a575050505080519684880195858952518096528188019698935b86851061052c5788880389f35b895180518216895280870151831689880152830151821688840152988501989683019660019094019361051f565b858884849e9a9b9c9e9d9798999d0301126105bb57888791875161057d81611252565b610586866113ab565b815261059383870161130f565b838201526105a289870161130f565b898201528152019201919a9897969a99959493996104ff565b8780fd5b8380fd5b8480fd5b835162461bcd60e51b8152908101839052602260248201527f44656c65676174696f6e7320707265636f6d70696c652063616c6c206661696c604482015261195960f21b6064820152608490fd5b509190346101d057602090816003193601126105bf5783813563ffffffff811680910361037b57819085516106498161126d565b606081528587519161065a8361126d565b88368437015285518581019182528581526106748161126d565b519061080b5afa906106846112df565b911561078f5750805181019180830193818385031261078b5781830151926001600160401b03938481116105bb57606091018095031261078b578051946106ca8661126d565b828501518481116105bb5781846106e392880101611323565b865280605f86011215610787578151946106fc8661126d565b859060808101928311610783579280989301905b8282106107665750505081850193845261073a8651958387525160608488015260808701906111c5565b9351909585015b6002871061074f5785850386f35b828060019286855116815201920196019590610741565b848091610775849b969b61130f565b815201910190979297610710565b8880fd5b8680fd5b8580fd5b835162461bcd60e51b8152908101839052601f60248201527f53706f74496e666f20707265636f6d70696c652063616c6c206661696c6564006044820152606490fd5b5091346101d057806003193601126101d0576107ec611187565b602435846001600160401b039283831680930361037b57819085519361081185611252565b8285528287602096828882015201528651908582019260018060a01b031683528782015286815261084181611252565b51906108015afa936108516112df565b94156108bc57506060848051810103126105c3576060945082519061087582611252565b8261088182870161130f565b95868452856108a28961089583850161130f565b938688019485520161130f565b940193845281865197168752511690850152511690820152f35b60849184519162461bcd60e51b8352820152602260248201527f53706f7442616c616e636520707265636f6d70696c652063616c6c206661696c604482015261195960f21b6064820152fd5b509190346101d0576020928360031936011261017f57813563ffffffff811680910361037b5781809185518781019182528781526109458161126d565b51906108085afa916109556112df565b921561097c5750838280518101031261017f5750610330836001600160401b03920161130f565b835162461bcd60e51b8152908101859052601d60248201527f53706f74507820707265636f6d70696c652063616c6c206661696c65640000006044820152606490fd5b50823461037b578060031936011261037b576109d9611187565b916024359261ffff841680940361037b578180918451956109f98761121b565b828752826080602098828a820152828982015282606082015201528551908782019260018060a01b0316835286820152858152610a3581611252565b51906108005afa93610a456112df565b9415610af5575060a08480518101031261017f575063ffffffff60a093825192610a6e8461121b565b610a798583016113bf565b94858552610a8882840161130f565b908086019182526001600160401b03610aa3606086016113bf565b928488019384526080610ac98b610abb838a01611368565b9860608c01998a5201611387565b980197885284519860070b89525116908701525160070b90850152511660608301525115156080820152f35b825162461bcd60e51b8152908101849052601f60248201527f506f736974696f6e20707265636f6d70696c652063616c6c206661696c6564006044820152606490fd5b5091346101d0576020928360031936011261017f5782359063ffffffff821680920361017f578080845193610b6c85611236565b8160e0606096878152878b820152828982015282888201528260808201528260a08201528260c082015201528551888101918252888152610bac8161126d565b519061080c5afa93610bbc6112df565b9415610dac57508351840185810186868303126101d057868601516001600160401b03968782116105c3570193849261010095869103126105bf57855196610c0388611236565b8884015181811161078b57838a610c1c92870101611323565b88528684015181811161078b5784019280603f8501121561078b5789840151610c4481611394565b94610c518a5196876112a3565b818652898c87019260051b8201019283116105bb578901905b828210610d95575050509188939188999389948501928352610c8d82850161130f565b898601908152610c9f608086016113ab565b9383870194855289610cb360a088016113ab565b966080890197885260a0610cc960c08301611379565b990198895260c0610cdc60e08301611379565b9e019d8e52015197888a0b8903610d9157908d60e0610d139e9f01998a528c519d8e91848352518d858401526101208301906111c5565b91519c601f198284030191015281808d5192838152019c01918a5b828110610d7b57505050509260ff95928b9c959287955116908c0152519060018060a01b0380921660808c0152511660a08a0152511660c0880152511660e086015251900b908301520390f35b835186168e529c81019c92810192600101610d2e565b8980fd5b8b8091610da18461130f565b815201910190610c6a565b606490868086519262461bcd60e51b845283015260248201527f546f6b656e496e666f20707265636f6d70696c652063616c6c206661696c65646044820152fd5b50823461037b576020806003193601126101d057833563ffffffff908181168091036105c3578480918160808751610e248161121b565b606081528288820152828982015282606082015201528551858101918252858152610e4e8161126d565b519061080a5afa94610e5e6112df565b9515610f4b5750845185019482818703126105c357828101516001600160401b039182821161078757019560a08782031261078b57845195610e9f8761121b565b8488015192831161017f575060ff92610ec360a09893868087950191860101611323565b8752610ed0868401611368565b95858801968752610ee360608501611379565b91818901928352610f2a610f0b8b610efd60808901611379565b9760608d0198895201611387565b9760808b0198895283519b8c9b828d5251918c015260c08b01906111c5565b97511690880152511660608601525116608084015251151560a08301520390f35b835162461bcd60e51b81529081018390526024808201527f506572704173736574496e666f20707265636f6d70696c652063616c6c2066616044820152631a5b195960e21b6064820152608490fd5b509190346101d057602091826003193601126105bf578380610fba611187565b8160608551610fc8816111ea565b82815282898201528287820152015283518681019160018060a01b03168252868152610ff38161126d565b51906108055afa916110036112df565b921561108557506080828051810103126105bf5760809350805190611027826111ea565b61103284840161130f565b80835261104082850161130f565b9385840194855260606110588861089583850161130f565b94019384528251956001600160401b03809681809516895251169087015251169084015251166060820152f35b83608492519162461bcd60e51b8352820152602860248201527f44656c656761746f727953756d6d61727920707265636f6d70696c652063616c6044820152671b0819985a5b195960c21b6064820152fd5b849291503461037b578160031936011261037b578181818093526110fa81611288565b6020815191016108095afa9261110e6112df565b9315611138575060208380518101031261017f57506001600160401b03610330602080940161130f565b608490602084519162461bcd60e51b83528201526024808201527f4c31426c6f636b4e756d62657220707265636f6d70696c652063616c6c2066616044820152631a5b195960e21b6064820152fd5b600435906001600160a01b038216820361119d57565b600080fd5b60005b8381106111b55750506000910152565b81810151838201526020016111a5565b906020916111de815180928185528580860191016111a2565b601f01601f1916010190565b608081019081106001600160401b0382111761120557604052565b634e487b7160e01b600052604160045260246000fd5b60a081019081106001600160401b0382111761120557604052565b61010081019081106001600160401b0382111761120557604052565b606081019081106001600160401b0382111761120557604052565b604081019081106001600160401b0382111761120557604052565b602081019081106001600160401b0382111761120557604052565b90601f801991011681019081106001600160401b0382111761120557604052565b6001600160401b03811161120557601f01601f191660200190565b3d1561130a573d906112f0826112c4565b916112fe60405193846112a3565b82523d6000602084013e565b606090565b51906001600160401b038216820361119d57565b81601f8201121561119d578051611339816112c4565b9261134760405194856112a3565b8184526020828401011161119d5761136591602080850191016111a2565b90565b519063ffffffff8216820361119d57565b519060ff8216820361119d57565b5190811515820361119d57565b6001600160401b0381116112055760051b60200190565b51906001600160a01b038216820361119d57565b51908160070b820361119d5756fea2646970667358221220e513800d5e7d961f576d5a3b15d3380ab08c01a9848211cd28b3c6a06d760e6f64736f6c63430008170033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}